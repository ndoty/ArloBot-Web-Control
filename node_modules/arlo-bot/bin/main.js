var arlo = (function() {
    var module = {},
        SerialPort = require("serialport").SerialPort,
        emitter = require('events').EventEmitter,
        eventer = new emitter(),
        Q = require("q"),
        prior = Q.resolve(),
        serial,
        pkt = [],
        watchdog = false,
        botName = 'Arlo';

    function sendCommand(cmd, speed) {
        if (typeof speed === "undefined") {
            eventer.emit('driving--undefined');
            //serial.write(new Buffer([cmd]));
        } else {
            //serial.write(new Buffer([cmd].concat(speed)));
            eventer.emit('driving');
        }
        serial.flush();
    }

    function initArlo() {
        //sendCommand();
        module.wait(100)
        .then(function() {
            eventer.emit('ready');
        });
    }

    module.init = function(settings) {
        var settings = settings;

        serial = new SerialPort(settings.serialport, { baudrate: 115200, bufferSize: 5 });

        botName = settings.botName;

        // internal serial event handlers

        serial.on('data', function (data) {
            console.log(botName + ' connection successful.');
            watchdog = true;
            initArlo();
        });

        serial.on('close', function (err) {
            console.log('Serial connection closed.');
        });

        serial.on('error', function (err) {
            if (err = "{Error: Error Opening}") {
                console.log("USB cable loose/not connected. Please check cable for secure connection and restart program.");
                eventer.emit('error--opening');
            } else {
                console.error("error", err);
                eventer.emit("error");
            }
        });

        serial.on('open', function() {
            console.log('Serial connection successful.');
            var connectionAttemp = 0;
            setInterval(function() {
                if (watchdog === false && connectionAttemp <= 5) {
                    console.log('No data received from ' + botName + '... attempting to connect (again)');
                    eventer.emit('watchdog');
                    connectionAttemp++;
                    module.init(settings);
                } else if (watchdog === false) {
                    console.log('Still no data recieved from ' + botName + '. Please check connection and or correct com port.');
                    process.exit(code=0);
                }
                watchdog = false;
            }, 2000);
        });
    };

    module.drive = function(direction, speed) {
        prior = prior.then(function() {
            var cmd;
            if (direction === 'left') {
                cmd = '-' + speed + ", " + speed;
            } else if (direction === 'right') {
                cmd = speed + ", -" + speed;
            } else if (direction === 'forward') {
                cmd = speed + ', ' + speed;
            } else if (direction === 'backward') {
                cmd = '-' + speed + ", -" + speed;
            }

            sendCommand(cmd);
            return Q.resolve();
        });
        return prior;
    };

    module.rotate = function(direction, speed) {
        return module.drive(direction, speed);
    };

    module.wait = function(ms) {
        prior = prior.then(function() {
            var deferred = Q.defer();
            setTimeout(deferred.resolve, ms);
            return deferred.promise
        });
        return prior;
    };

    listeners = { 'obsticle': [], 'obsticleEnd': [] };

    module.on = function(evt, cb) {
        eventer.on(evt, function(e) {
            // set context to module, call it
            cb.call(module, e);
        });
    };

    module.off = function(evt) {
        eventer.removeAllListeners(evt);
    };

    return module;
}());

module.exports = arlo;
